// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentMS.Data.EF;

namespace StudentMS.Data.Migrations
{
    [DbContext(typeof(StudentMSDbContext))]
    partial class StudentMSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StudentMS.Data.Entities.Grade", b =>
                {
                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.HasKey("SubjectId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            SubjectId = "Chemistry",
                            StudentId = 1,
                            Score = 8f
                        },
                        new
                        {
                            SubjectId = "Physics",
                            StudentId = 1,
                            Score = 7.5f
                        },
                        new
                        {
                            SubjectId = "Math",
                            StudentId = 1,
                            Score = 8f
                        });
                });

            modelBuilder.Entity("StudentMS.Data.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Q1",
                            Dob = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vo A",
                            PhoneNumber = "00001",
                            Sex = "Nam"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Q2",
                            Dob = new DateTime(2001, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vo B",
                            PhoneNumber = "00002",
                            Sex = "Nu"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Q3",
                            Dob = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vo C",
                            PhoneNumber = "00003",
                            Sex = "Nam"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Q4",
                            Dob = new DateTime(2001, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vo D",
                            PhoneNumber = "00004",
                            Sex = "Nam"
                        });
                });

            modelBuilder.Entity("StudentMS.Data.Entities.Subject", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = "Chemistry",
                            Name = "Chemistry subject"
                        },
                        new
                        {
                            Id = "Physics",
                            Name = "Physics subject"
                        },
                        new
                        {
                            Id = "Math",
                            Name = "Math subject"
                        });
                });

            modelBuilder.Entity("StudentMS.Data.Entities.Grade", b =>
                {
                    b.HasOne("StudentMS.Data.Entities.Student", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentMS.Data.Entities.Subject", "Subject")
                        .WithMany("Grades")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("StudentMS.Data.Entities.Student", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("StudentMS.Data.Entities.Subject", b =>
                {
                    b.Navigation("Grades");
                });
#pragma warning restore 612, 618
        }
    }
}
