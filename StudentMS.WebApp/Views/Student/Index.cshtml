@using StudentMS.ViewModel.Catalog.Students;
@using StudentMS.ViewModel.Common;
@model PageResultBase<StudentVM>;


@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Scripts{
    <script>
        setTimeout(function() {
            $("#msgAlert").fadeOut("slow")
        }, 2000)
    </script>
}
<div class="container-fluid">
    <h1 class="mt-4">List User</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/">Dashboard</a></li>
        <li class="breadcrumb-item active">List Student</li>
    </ol>
    <div class="card mb-4">
        <div class="card-header">
            <div class="row">
                <div class="col-md-6 col-xs-12">
                    <a class="btn btn-success" asp-action="Create" method="post">Create a new student</a>
                </div>
                <div class="col-md-6 col-xs-12">
                    <form asp-action="Index" method="get">
                        <div class="row">
                            <div class="col-md-8">
                                <input type="text" class="form-control" name="keyword" value="@ViewBag.keyword"/>
                            </div>
                            <div class="col-md-2">
                                <button type="submit" class="btn btn-primary">Search</button>
                            </div>
                            <div class="col-md-2">
                                <button type="button" class="btn btn-dark" onclick="window.location.href='/Student/Index'">Reset</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row">
                @if(ViewBag.SuccessMsg != null)
                {
                    <div id="msgAlert" class="alert alert-success" role="alert">@ViewBag.SuccessMsg</div>
                }
            </div>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Name</th>
                        <th>Phone number</th>
                        <th>Day of birth</th>
                        <th>Sex</th>
                        <th>Address</th>
                        <th>Average score</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Items) {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Id)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PhoneNumber)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Dob)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Sex)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Address)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Average)
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", new {  studentId=item.Id }) |
                                @Html.ActionLink("Delete", "Delete", new { studentId=item.Id  })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            @await Component.InvokeAsync("Pager", Model)
        </div>
    </div>
</div>

